package com.fastcampus.ch2;

import org.springframework.beans.propertyeditors.StringArrayPropertyEditor;
import org.springframework.core.convert.ConversionService;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller 
@RequestMapping("/register")
public class RegisterController {
	
	
	@InitBinder
	public void toData(WebDataBinder binder) {
		ConversionService conversionService = binder.getConversionService();
		System.out.println("conversionService = "+conversionService);
//		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
//		binder.registerCustomEditor(Date.class, new CustomDateEditor(df, false));
		binder.registerCustomEditor(String[].class, new StringArrayPropertyEditor("#"));
	}
	
	
	
	@RequestMapping(value="/add", method= {RequestMethod.GET, RequestMethod.POST})
//	@RequestMapping("/register/add") //신규회원 가입 화면
//	@GetMapping("/register/add")
	public String register() {
		return "registerForm"; // WEB-INF/views/registerForm.jsp
	}//이 메서드가 하는일은 registerForm.jsp와 url을 연결해줄 뿐 하는일이 없다. => view 컨트롤러로 변경가능.
	
	
	
//	@RequestMapping(value="/register/save", method=RequestMethod.POST )
	@PostMapping("/save") // spring 4.3버전부터     //get방식으로 요청하면 405에러 발생.
	public String save(User user,BindingResult result, Model m) throws Exception{
		System.out.println("result = "+result);
		System.out.println("User = "+user);
		
		
		
		UserValidator userValidator = new UserValidator();
		userValidator.validator(user,result);//BindingResult 는 Errors의 자손
		
		if(result.hasErrors()) {
			retrun "registerForm"
		}
		
		
//		//1. 유효성 검사
//		if(!isValid(user)) {
//			String msg = URLEncoder.encode("id를 잘못입력하셨습니다.","utf-8");
//			
//			m.addAttribute("msg",msg);
//			return "forward:/register/add"; //URL재작성(rewriting)
////			return "redirect:/register/add?msg="+msg; //URL재작성(rewriting)
//		}
		//2. DB에 신규회원 정보를 저장
		
		
		return "registerInfo";
	}

	private boolean isValid(User user) {
//		return false;
		return true;
	}

}
